name: ChatGPT PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    if: github.event.action != 'labeled' || github.event.label.name == 'needs-ai-review'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare diff
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          git diff --unified=0 origin/${{ github.base_ref }}... > diff.patch
          split -b 100k diff.patch diff_part_ || echo "No diff"

      - name: Install jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Call OpenAI for each chunk
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "## Revue automatique par ChatGPT ðŸ¤–" > review.md
          for file in diff_part_*; do
            [ -f "$file" ] || continue
            echo -e "\n### Analyse du morceau: $file" >> review.md
            DIFF=$(sed 's/\\/\\\\/g; s/"/\\"/g' "$file")
            jq -n --arg d "$DIFF" '{
              "model": "gpt-4o-mini",
              "temperature": 0.2,
              "messages": [
                {"role": "system", "content": "Tu es un senior reviewer. Donne un retour clair et concis en franÃ§ais avec sections: Bugs, SÃ©curitÃ©, Performance, Style, Autres remarques."},
                {"role": "user", "content": "Voici un diff de code:\n\n\($d)"}
              ]
            }' > body.json

            curl -s https://api.openai.com/v1/chat/completions \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d @body.json \
              | jq -r '.choices[0].message.content // "Pas de retour."' >> review.md
          done

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('review.md', 'utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

      - name: Add reviewed label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: ai-reviewed
